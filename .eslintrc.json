{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@next/next/recommended"
    ],
    "overrides": [
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "simple-import-sort"
    ],
    "rules": {
        "jsx-a11y/alt-text": [
            "off"
        ],
        "jsx-quotes": [
            "error",
            "prefer-double"
        ],
        "import/no-anonymous-default-export": [
            "off"
        ],
        "no-duplicate-imports": [
            "error",
            {
                "includeExports": true
            }
        ],
        "comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "react/jsx-equals-spacing": [
            "error",
            "never"
        ],
        "react/jsx-tag-spacing": [
            "error",
            {
                "closingSlash": "never",
                "beforeSelfClosing": "always",
                "afterOpening": "never",
                "beforeClosing": "allow"
            }
        ],
        "react/jsx-wrap-multilines": [
            "error",
            {
                "declaration": "parens-new-line",
                "assignment": "parens-new-line",
                "return": "parens-new-line",
                "arrow": "parens-new-line",
                "condition": "parens-new-line",
                "logical": "parens-new-line",
                "prop": "parens-new-line"
            }
        ],
        "react/jsx-closing-bracket-location": [
            "error",
            {
                "nonEmpty": "tag-aligned",
                "selfClosing": "tag-aligned"
            }
        ],
        "react/jsx-first-prop-new-line": [
            "error",
            "multiline-multiprop"
        ],
        "react/jsx-max-props-per-line": [
            "error",
            {
                "maximum": {
                    "single": 1,
                    "multi": 1
                }
            }
        ],
        "react-hooks/exhaustive-deps": "off",
        "no-trailing-spaces": [
            "error"
        ],
        "simple-import-sort/imports": [
            "error",
            {
                "groups": [
                    // Packages. `react` related packages come first.
                    [
                        "^react",
                        "^next",
                        "^@?\\w"
                    ],
                    // Types
                    [
                        "^types\/"
                    ],
                    // Models
                    [
                        "^models\/"
                    ],
                    // Consts, utils, services
                    [
                        "^consts\/",
                        "^utils\/",
                        "^services\/"
                    ],
                    // requests, store, gql
                    [
                        "^requests\/",
                        "^store\/",
                        "^gql\/"
                    ],
                    // Theme
                    [
                        "^theme\/"
                    ],
                    // components
                    [
                        "^components\/",
                        "^pages\/",
                        "^hooks\/"
                    ],
                    // Parent imports. Put `..` last.
                    [
                        "^\\.\\.(?!/?$)",
                        "^\\.\\./?$"
                    ],
                    // Other relative imports. Put same-folder imports and `.` last.
                    [
                        "^\\./(?=.*/)(?!/?$)",
                        "^\\.(?!/?$)",
                        "^\\./?$"
                    ]
                ]
            }
        ],
        "object-curly-spacing": [
            "error",
            "always"
        ],
        "no-constant-condition": [
            "off"
        ],
        "@next/next/no-img-element": [
            "off"
        ],
        "@next/next/link-passhref": [
            "off"
        ],
        "@next/next/no-page-custom-font": [
            "off"
        ],
        "@next/next/no-html-link-for-pages": [
            "off"
        ],
        "no-cond-assign": [
            "off"
        ],
        "no-extra-semi": "off",
        "@typescript-eslint/semi": [
            "error"
        ],
        "@typescript-eslint/no-extra-semi": [
            "off"
        ],
        "react/boolean-prop-naming": [
            "warn",
            {
                "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+"
            }
        ],
        "indent": [
            "warn",
            4,
            {
                "SwitchCase": 1,
                "ObjectExpression": "first",
                "MemberExpression": 1,
                "VariableDeclarator": 0
            }
        ],
        "react/no-unescaped-entities": "off",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "varsIgnorePattern": "vars|variables",
                "argsIgnorePattern": "getState|ownProps|appContext|locale|formikHelpers"
            }
        ],
        "linebreak-style": [
            "warn",
            "unix"
        ],
        "quotes": [
            "warn",
            "single"
        ],
        "semi": [
            "off"
        ],
        "comma-dangle": "off",
        "no-console": "off",
        "no-multiple-empty-lines": [
            "warn"
        ],
        "padded-blocks": [
            "warn",
            "never"
        ],
        "react/prop-types": "off",
        "react/display-name": "off",
        "no-empty-pattern": "off",
        "react/react-in-jsx-scope": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/comma-dangle": [
            "warn",
            "always-multiline"
        ]
    }
}
